body {
  margin: 0;
  font-family: "M PLUS Rounded 1c", sans-serif;
}

/* ハンバーガーメニュー */
/* Navbar & Navmenu color */
:root {
  --background-navbar: rgba(55, 55, 55, 0.98);
}

.header {
  background: var(--background-navbar);
  position: fixed;
  width: 100%;
  height: 52px;
}

/* Nav items */
.menu {
  list-style: none;
  position: absolute;
  width: 100%;
  height: auto;
  top: 0;
  margin-top: 52px;
  padding: 0 0 10px 0;
  clear: both;
  background: var(--background-navbar);
  transition: 0.3192s cubic-bezier(0.04, 0.04, 0.12, 0.96) 0.1008s;
  transform: scale(1, 0);
  transform-origin: top;
}

/* Hamburger menu button */
.menu-btn:checked ~ .menu {
  transform: scale(1, 1);
  transform-origin: top;
  transition: 0.3192s cubic-bezier(0.04, 0.04, 0.12, 0.96) 0.1008s;
}

/* Hamburger menbu text */
.menu a {
  text-decoration: none;
  font-weight: 500;
  letter-spacing: 2px;
  font-size: 16px;
  text-transform: capitalize;
  color: #ddd;
  opacity: 0;
  transition: 0.5s;
}

.menu li {
  border-top: 1px solid rgb(75, 75, 75);
  padding: 15px 0;
  margin: 0 54px;
  opacity: 0;
  transition: 0.5s;
}

.menu-btn:checked ~ .menu a,
.menu-btn:checked ~ .menu li {
  opacity: 1;
  transition: 0.3192s cubic-bezier(0.04, 0.04, 0.12, 0.96) 0.2s;
}

.menu-btn {
  display: none;
}

.menu-icon {
  display: inline-block;
  position: relative;
  cursor: pointer;
  padding: 24px 14px;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

.navicon {
  background: #ddd;
  display: block;
  height: 3px;
  width: 26px;
  position: relative;
  transition: 0.3192s cubic-bezier(0.04, 0.04, 0.12, 0.96) 0.1008s;
}

.navicon:before,
.navicon:after {
  content: "";
  display: block;
  height: 100%;
  width: 100%;
  position: absolute;
  background: #ddd;
  transition: 0.3192s cubic-bezier(0.04, 0.04, 0.12, 0.96) 0.1008s;
}

.navicon:before {
  top: 9px;
}

.navicon:after {
  bottom: 9px;
}

/* Hamburger Menu Animation Start */
.menu-btn:checked ~ .menu-icon .navicon:before {
  transform: rotate(-45deg);
}

.menu-btn:checked ~ .menu-icon .navicon:after {
  transform: rotate(45deg);
}

.menu-btn:checked ~ .menu-icon:not(.steps) .navicon:before {
  top: 0;
}
.menu-btn:checked ~ .menu-icon:not(.steps) .navicon:after {
  bottom: 0;
}

.menu-btn:checked ~ .menu-icon .navicon {
  background: rgba(0, 0, 0, 0);
  transition: 0.2192s cubic-bezier(0.04, 0.04, 0.12, 0.96) 0.1008s;
}
/* Hamburger Menu Animation End */

/* Navbar Container */
.navtext-container {
  width: 100%;
  height: 52px;
  position: absolute;
  box-sizing: border-box;
  display: flex;
  justify-content: center;
  align-items: center;
}

/* Navbar Text */
.navtext {
  position: absolute;
  text-transform: uppercase;
  color: #ddd;
  letter-spacing: 4px;
  font-size: 20px;
}
/* ハンバーガーメニューここまで */

.formArea {
  width: 100%;
  background-color: lightgrey;
  text-align: center;
  padding-top: 60px;
  padding-bottom: 6px;
}

.form {
  font-family: "M PLUS Rounded 1c", sans-serif;
  color: gray;
  width: 460px;
  padding: 2px;
  background-color: white;
  border-radius: 4px;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 2px;
}

.send {
  font-family: "M PLUS Rounded 1c", sans-serif;
  color: white;
  border: none;
  width: 460px;
  padding: 2px;
  background-color: gray;
  border-radius: 4px;
  margin-bottom: 4px;
  margin-left: auto;
  margin-right: auto;
  display: block; /* ボタンを中央に配置 */
  text-align: center; /* ボタン内のテキストを中央揃え */
}

.send:hover {
  box-shadow: 0px 2px 4px black;
  color: gray;
  background-color: white;
  transform: translateY(-2px);
  transition: 0.3s;
}

.send:active,
.send:focus {
  background-color: gray;
  color: white;
  transform: translateY(1px);
}

/* 入力フォームのリストをテーブル構造でレスポンシブに表示 */
.set {
  border-collapse: collapse;
  table-layout: fixed;
  width: 70%; /* table幅を100%に指定 */
  border: none;
}
.set th,
.set td {
  display: block; /* セルをブロック要素に指定 */
  width: 100%; /* セルを親要素いっぱいの幅に指定 */
  border: none;
  font-size: 14px;
  padding: 10px;
  vertical-align: middle;
  text-align: left;
  box-sizing: border-box;
}
.set th {
  font-weight: 700;
}

@media screen and (min-width: 768px) {
  .set th,
  .set td {
    display: table-cell; /* デフォルト値に指定 */
    text-align: right;
  }
  .set th {
    color: #000;
  }
}

/* 目的地リストと地図をテーブル構造でレスポンシブに表示 */
.list {
  border-collapse: collapse;
  table-layout: fixed;
  width: 100%; /* table幅を100%に指定 */
  border: none;
}
.list th,
.list td {
  display: block; /* セルをブロック要素に指定 */
  width: 100%; /* セルを親要素いっぱいの幅に指定 */
  border: none;
  font-size: 14px;
  padding: 10px;
  vertical-align: top;
  text-align: left;
  box-sizing: border-box;
}
.list th {
  font-weight: 700;
}

@media screen and (min-width: 768px) {
  .list th,
  .list td {
    display: table-cell; /* デフォルト値に指定 */
    border-bottom: 1px solid #ccc;
    color: #000;
  }
  .list th {
    color: #000;
  }
}

/* データベースから読み込んだリスト表示のテーブル */
.draw {
  max-width: 600px;
  border-collapse: collapse;
}

.draw th,
.draw td {
  padding: 10px;
  text-align: left;
  border-bottom: 1px solid #ddd;
}

.draw tr:hover {
  background-color: #f2f9ff;
}

/* 地図の表示 */
#map {
  min-height: 500px;
  border-radius: 8px;
  background-color: gray;
}

/* 吹き出しの設定 */
.balloon {
  background-color: white;
  color: rgb(55, 55, 55);
  padding: 10px;
  margin-bottom: 4px;
  max-width: 700px;
  margin-left: auto;
  margin-right: auto;
  border-radius: 8px;
  font-family: "M PLUS Rounded 1c", sans-serif;
  font-weight: 400;
  font-style: normal;
}

.balloon:hover {
  box-shadow: 0px 2px 4px gray;
  background-color: white;
  color: gray;
  transform: translateY(-2px);
  transition: 0.3s;
}

.balloon:active,
.balloon:focus {
  background-color: gray;
  color: white;
  transform: translateY(1px);
}

.date {
  font-size: 12px;
  margin-bottom: 4px;
  text-align: left;
}

.address {
  font-weight: 1000;
  font-size: 18px;
}

.note {
  font-size: 12px;
  margin-top: 4px;
  text-align: left;
}

/* 目的地の表示と×ボタンを横並びにする */
.destination {
  display: flex;
}

/* デリート用の×ボタン*/
.delete {
  margin-left: auto;
  width: 20px;
  height: 20px;
  text-align: center;
  vertical-align: middle;
}

.delete:hover {
  transform: rotate(90deg);
  transition: 0.3s;
}

.delete:active,
.delete:focus {
  transform: rotate(-90deg);
  transition: 0.3s;
}
